--[[
	Copyright (c) 2012 Carreras Nicolas (original)
    Copyright (c) 2016 Jamie Mansfield <https://www.jamierocks.uk/> (computercraft port)
	
	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
--]]

-- Remade for ComputerCraft from https://github.com/Dynodzzo/Lua_INI_Parser

-- This function has been somewhat tested, however I'd still be wary of failure ;)
function Load(fileName)
    -- assert(type(fileName) == 'string', 'Parameter "fileName" must be a string.');
    local file = fs.open(fileName, 'r');
    local data = {};
    local section;
    local line = file.readLine()
    while(line ~= nil) do
        local tempSection = line:match('^%[([^%[%]]+)%]$');
        if(tempSection) then
            section = tonumber(tempSection) and tonumber(tempSection) or tempSection;
            data[section] = data[section] or {};
        end
        local param, value = line:match('^([%w|_]+)%s-=%s-(.+)$');
        if(param and value ~= nil) then
            if(tonumber(value)) then
                value = tonumber(value);
            elseif(value == 'true') then
                value = true;
            elseif(value == 'false') then
                value = false;
            end
            if(tonumber(param)) then
                param = tonumber(param);
            end
            data[section][param] = value;
        end
        line = file.readLine()
    end
    file.close();
    return data;
end

-- Although this is ported as to my knowledge, I'd still be wary of failure ;)
function Save(fileName, data)
    -- assert(type(fileName) == 'string', 'Parameter "fileName" must be a string.');
    -- assert(type(data) == 'table', 'Parameter "data" must be a table.');
    local file = fs.open(fileName, "w");
    local contents = '';
    for section, param in pairs(data) do
        contents = contents .. ('[%s]\n'):format(section);
        for key, value in pairs(param) do
            contents = contents .. ('%s=%s\n'):format(key, tostring(value));
        end
        contents = contents .. '\n';
    end
    file.write(contents);
    file.close();
end
